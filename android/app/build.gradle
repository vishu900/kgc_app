def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33


    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    sourceSets.main {
        jniLibs.srcDirs 'src/main/jniLibs'
    }

    defaultConfig {
        ndkVersion = "21.1.6352462"
        applicationId "com.dataproject2"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

   /*  buildTypes {

        debug {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    } */
    lint {
        checkReleaseBuilds false
        disable 'InvalidPackage'
    }


}

flutter {
    source '../..'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation files('libs/mantra.mfs100.jar')

    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.0'

    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.firebase:firebase-crashlytics:18.2.7'
    implementation 'com.google.firebase:firebase-analytics:20.0.2'

}


apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'


